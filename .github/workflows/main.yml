name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  TF_ACTION_WORKING_DIR: "infra"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd app
          pip install -r requirements.txt

  Sonar:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          cd app
          pip install -r requirements.txt

      - name: Run tests and coverage
        run: |
          source venv/bin/activate
          cd app
          coverage run -m unittest discover -s tests -p "*_test.py"
          coverage xml -o coverage-reports/coverage.xml

      - name: Adjust coverage paths
        run: |
          cd app
          sed -i 's|/home/runner/work/fiap-pagamentos-ms/fiap-pagamentos-ms/app|.|g' coverage-reports/coverage.xml
          sed -i 's|filename="|filename="src/|g' coverage-reports/coverage.xml
          cat coverage-reports/coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=fiap-pagamentos-ms
            -Dsonar.sources=app/src
            -Dsonar.tests=app/tests
            -Dsonar.python.coverage.reportPaths=app/coverage-reports/coverage.xml

      - name: SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  BDD:
    needs: Sonar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          cd app
          pip install -r requirements.txt

      - name: Run BDD tests
        run: |
          source venv/bin/activate
          cd app/tests/automated
          behave

  Publish:
    needs: BDD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          cd app
          pip install -r requirements.txt

      - name: Terraform init
        run: |
          cd infra
          terraform init

      - name: Terraform plan
        run: |
          cd infra
          terraform plan

      - name: Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve
